---
- name: Create RocketPool root settings dir
  file:
    path:  '{{ item }}'
    owner: '{{ rocketpool_user }}'
    group: '{{ rocketpool_group }}'
    state: 'directory'
    mode:  0755
  with_items:
    - '{{ rocketpool_service_path }}'
    - '{{ rocketpool_data_path }}'
    - '{{ rocketpool_records_path }}'
    - '{{ rocketpool_validators_path }}'

# The user-settings.yml.j2 template was created based on the config created
# by running this command during initial setup. Unnecessary unless upgrading.
#- name: Generate Rocketpool node config
#  become_user: '{{ rocketpool_user }}'
#  command: |
#    /usr/local/bin/rocketpool-cli \
#      --config-path={{ rocketpool_service_path }} \
#      service config \
#      --enableMetrics=true \
#      --nodeMetricsPort={{ rocketpool_metrics_port }} \
#      --watchtowerMetricsPort={{ rocketpool_watchtower_metrics_port }} \
#      --smartnode-network=mainnet \
#      --smartnode-archiveECUrl={{ rocketpool_eth1_archive_url | mandatory }} \
#      --smartnode-web3StorageApiToken={{ rocketpool_web3_storage_token | mandatory }} \
#      --bnMetricsPort={{ rocketpool_eth2_metrics_port }} \
#      --smartnode-dataPath={{ rocketpool_data_path }} \
#      --executionClientMode=external \
#      --executionClient=geth \
#      --native-ecHttpUrl={{ rocketpool_eth1_exec_layer_rpc_url | mandatory }} \
#      --externalExecution-httpUrl={{ rocketpool_eth1_exec_layer_rpc_url | mandatory }} \
#      --externalExecution-wsUrl={{ rocketpool_eth1_exec_layer_ws_url | mandatory }} \
#      --consensusClientMode=external \
#      --consensusClient=nimbus \
#      --native-consensusClient=nimbus \
#      --consensusCommon-apiPort={{ rocketpool_eth2_rest_port }} \
#      --consensusCommon-graffiti={{ rocketpool_graffiti }} \
#      --native-ccHttpUrl=http://localhost:{{ rocketpool_eth2_rest_port }} \
#      --native-validatorRestartCommand={{ rocketpool_eth2_service_path }}/restart.sh \
#      --native-validatorStopCommand={{ rocketpool_eth2_service_path }}/stop.sh
#  args:
#    creates: '{{ rocketpool_service_path }}/user-settings.yml'


# If isNative is False, the daemon doesn't take the cli options
- name: Check if the Native flag
  tags: isNative
  assert:
    that:
      - rocketpool_is_native == True
    fail_msg: "The flag rocketpool_is_native should be set to true"

- name: Create node configuration
  template:
    src:   'user-settings.yml.j2'
    dest:  '{{ rocketpool_service_path }}/user-settings.yml'
    owner: '{{ rocketpool_user }}'
    mode:  0640

- name: Create wrapper scripts
  template:
    src:   'scripts/{{ item }}.j2'
    dest:  '{{ rocketpool_service_path }}/{{ item }}'
    owner: '{{ rocketpool_user }}'
    mode:  0755
  with_items:
    - 'cli.sh'
    - 'eth2-stop.sh'
    - 'eth2-restart.sh'

- name: Create RocketPool password file
  copy:
    dest: '{{ rocketpool_password_file }}'
    owner: '{{ rocketpool_user }}'
    group: '{{ rocketpool_group }}'
    mode: 0400
    content: '{{ rocketpool_password | mandatory }}'

- name: Create RocketPool wallet file
  copy:
    dest: '{{ rocketpool_wallet_file }}'
    owner: '{{ rocketpool_user }}'
    group: '{{ rocketpool_group }}'
    mode: 0400
    content: '{{ rocketpool_wallet | mandatory }}'

# If isNative is False, the daemon doesn't take the cli options
- name: Check if the Native flag
  tags: isNative
  assert:
    that:
      - rocketpool_is_native == True
    fail_msg: "The flag rocketpool_is_native should be set to true"
