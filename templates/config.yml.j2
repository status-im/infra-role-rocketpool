rocketpool:
  storageAddress: {{ rocketpool_contracts[rocketpool_eth1_network].storage }}
  oneInchOracleAddress: {{ rocketpool_contracts[rocketpool_eth1_network].one_inch }}
  rplTokenAddress: {{ rocketpool_contracts[rocketpool_eth1_network].rpl_token }}
  rplFaucetAddress: {{ rocketpool_contracts[rocketpool_eth1_network].rpl_faucet }}
smartnode:
  projectName: rocketpool
  graffitiVersion: {{ rocketpool_version }}
  image: rocketpool/smartnode:{{ rocketpool_version }}
  passwordPath: {{ rocketpool_password_file }}
  walletPath: {{ rocketpool_data_path }}/wallet
  validatorKeychainPath: {{ rocketpool_data_path }}/validators
  validatorRestartCommand: /opt/rocketpool/{{ rocketpool_version }}/bin/validator-restart-command.sh
  # The desired gas price, in gwei, to use for transactions. Set it to 0 to use the network's average price.
  gasPrice: 0
  # Automatic RPL reward claims will wait until the network's average gas price, in gwei, is below this limit.
  # Set it to 0 to disable automatic claiming of RPL rewards entirely.
  rplClaimGasThreshold: 150
  txWatchUrl: {{ rocketpool_tx_watch_urls[rocketpool_eth1_network] }}
chains:
  eth1:
    provider: {{ rocketpool_eth2_web3_http_url }}
    wsProvider: {{ rocketpool_eth2_web3_ws_url }}
    mainnetProvider: {{ rocketpool_eth2_web3_http_url }}
    chainID: {{ rocketpool_eth1_network_id }} # {{ rocketpool_eth1_network }}
    client:
      options:
      - id: geth
        name: Geth
        desc: "\tGeth is one of the three original implementations of the\n
          \t\tEthereum protocol. It is written in Go, fully open source and\n
          \t\tlicensed under the GNU LGPL v3."
        image: ethereum/client-go:v1.10.11
        link: https://geth.ethereum.org/
        eventLogInterval: 25000
        params:
        - name: Ethstats Label
          desc: optional - for reporting Eth 1.0 node status to ethstats.net
          env: ETHSTATS_LABEL
          advanced: true
        - name: Ethstats Login
          desc: optional - for reporting Eth 1.0 node status to ethstats.net
          env: ETHSTATS_LOGIN
          advanced: true
        - name: Cache Size
          desc: "Geth's cache size, in MB - set this to 256 if you have 4 GB\n
            of RAM, or 512 if you have 8 GB"
          env: GETH_CACHE_SIZE
          type: uint
          blankText: the default of 1024
          default: 1024
          advanced: true
        - name: Max Peers
          desc: "The maximum number of peers that Geth should connect to -\n
            this can be lowered down to 12 to improve performance on low-power\n
            systems or constrained networks"
          env: GETH_MAX_PEERS
          type: uint
          blankText: the default of 50
          default: 50
          advanced: true
        - name: P2P Port
          desc: The port for Geth to use for P2P (blockchain) traffic
          env: ETH1_P2P_PORT
          blankText: the default of 30303
          default: 30303
          type: uint16
          advanced: true
      - id: infura
        name: Infura
        desc: "\tUse infura.io as a light client for Eth 1.0. Not recommended\n
          \t\tfor use in production."
        image: rocketpool/smartnode-pow-proxy:v1.0.0
        link: https://infura.io/
        eventLogInterval: 25000
        params:
        - name: Infura Project ID
          desc: the ID of your project created in Infura
          env: INFURA_PROJECT_ID
          regex: ^[0-9a-fA-F]{32}$
          required: true
      - id: pocket
        name: Pocket
        desc: "\tUse Pocket Network as a decentralized light client for Eth 1.0.\n
          \t\tSuitable for use in production.\n"
        image: rocketpool/smartnode-pow-proxy:v1.0.0
        link: https://www.portal.pokt.network/
        compatibleEth2Clients: lighthouse;prysm;teku
        eventLogInterval: 25000
        params:
        - name: Gateway ID
          desc: "If using a custom gateway, enter 'lb/' followed by the Gateway ID (example: lb/{12345...}"
          env: POCKET_PROJECT_ID
          regex: (^$|^(lb\/)?[0-9a-zA-Z]{24,}$)
          default: lb/6126b4a783e49000343a3a47
          blankText: the standard Rocket Pool Gateway ID for Pocket
          advanced: true
      - id: custom
        name: Custom
        desc: "\tUse a custom Eth 1.0 client at a specified address (does not\n
          \t\twork on localhost)."
        image: rocketpool/smartnode-pow-proxy:v1.0.0
        params:
        - name: Provider HTTP URL
          desc: "The Eth 1.0 client HTTP server address and port\n
            For example: http://192.168.0.100:8545"
          env: HTTP_PROVIDER_URL
          required: true
        - name: Provider Websocket URL
          desc: "The Eth 1.0 client websocket server address and port\n
            For example: ws://192.168.0.100:8546"
          env: WS_PROVIDER_URL
          required: true
  eth2:
    provider: http://127.0.0.1:{{ rocketpool_eth2_rpc_port }}
    client:
      options:
      - id: lighthouse
        name: Lighthouse
        desc: "\tLighthouse is an Eth2.0 client with a heavy focus on speed and\n
          \t\tsecurity. The team behind it, Sigma Prime, is an information\n
          \t\tsecurity and software engineering firm who have funded Lighthouse\n
          \t\talong with the Ethereum Foundation, Consensys, and private\n
          \t\tindividuals. Lighthouse is built in Rust and offered under an\n
          \t\tApache 2.0 License."
        image: sigp/lighthouse:v2.0.1
        link: https://lighthouse-book.sigmaprime.io/
        params:
        - name: Custom Graffiti
          desc: optional - for adding custom text to signed Eth 2.0 blocks - 16 chars max
          env: CUSTOM_GRAFFITI
          regex: ^.{0,16}$
        - name: Checkpoint Sync Provider
          desc: "If you would like to instantly sync using an existing Beacon node, enter its URL.\n
                 Example: https://<project ID>:<secret>@eth2-beacon-prater.infura.io\n
                 Leave this blank if you want to sync normally from the start of the chain."
          env: ETH2_CHECKPOINT_SYNC_URL
        - name: Target Peers
          desc: "The number of peer connections to maintain - you can try\n
            lowering this if you have a low-resource system or a constrained\n
            network"
          env: ETH2_MAX_PEERS
          type: uint
          blankText: the default of 50
          default: 50
          advanced: true
        - name: P2P Port
          desc: The port to use for P2P (blockchain) traffic
          env: ETH2_P2P_PORT
          type: uint16
          default: 9001
          blankText: the default of 9001
          advanced: true
      - id: nimbus
        name: Nimbus
        desc: "\tNimbus is a client implementation for both Ethereum 2.0 and\n
          \t\tEthereum 1.0 that strives to be as lightweight as possible in\n
          \t\tterms of resources used. This allows it to perform well on\n
          \t\tembedded systems, resource-restricted devices -- including\n
          \t\tRaspberry Pis and mobile devices -- and multi-purpose servers."
        image: statusim/nimbus-eth2:multiarch-v1.5.2
        link: https://nimbus.guide/intro.html
        params:
        - name: Custom Graffiti
          desc: optional - for adding custom text to signed Eth 2.0 blocks - 16 chars max
          env: CUSTOM_GRAFFITI
          regex: ^.{0,16}$
        - name: Max Peers
          desc: "The maximum number of peers to try to connect to - you\n
            can try lowering this if you have a low-resource system or\n
            a constrained network"
          env: ETH2_MAX_PEERS
          type: uint
          blankText: the default of 160
          default: 160
          advanced: true
        - name: P2P Port
          desc: The port to use for P2P (blockchain) traffic
          env: ETH2_P2P_PORT
          type: uint16
          default: 9001
          blankText: the default of 9001
          advanced: true
      - id: prysm
        name: Prysm
        desc: "\tPrysm is a Go implementation of Ethereum 2.0 protocol with a\n
          \t\tfocus on usability, security, and reliability. Prysm is developed\n
          \t\tby Prysmatic Labs, a company with the sole focus on the\n
          \t\tdevelopment of their client. Prysm is written in Go and released\n
          \t\tunder a GPL-3.0 license."
        beaconImage: prysmaticlabs/prysm-beacon-chain:HEAD-a80b1c-debug #v2.0.2
        validatorImage: prysmaticlabs/prysm-validator:HEAD-a80b1c-debug #v2.0.2
        link: https://docs.prylabs.network/docs/getting-started
        supermajority: true
        params:
        - name: Custom Graffiti
          desc: optional - for adding custom text to signed Eth 2.0 blocks - 16 chars max
          env: CUSTOM_GRAFFITI
          regex: ^.{0,16}$
        - name: Max Peers
          desc: "The maximum number of peers to try to connect to - you\n
            can try lowering this if you have a low-resource system or\n
            a constrained network"
          env: ETH2_MAX_PEERS
          type: uint
          blankText: the default of 45
          default: 45
          advanced: true
        - name: P2P Port
          desc: The port to use for P2P (blockchain) traffic
          env: ETH2_P2P_PORT
          type: uint16
          default: 9001
          blankText: the default of 9001
          advanced: true
      - id: teku
        name: Teku
        desc: "\tPegaSys Teku (formerly known as Artemis) is a Java-based\n 
          \t\tEthereum 2.0 client designed & built to meet institutional needs\n
          \t\tand security requirements. PegaSys is an arm of ConsenSys\n
          \t\tdedicated to building enterprise-ready clients and tools for\n
          \t\tinteracting with the core Ethereum platform. Teku is Apache 2\n
          \t\tlicensed and written in Java, a language notable for its\n
          \t\tmaturity & ubiquity."
        image: consensys/teku:21.10.1
        link: https://docs.teku.consensys.net/en/stable/
        params:
        - name: Custom Graffiti
          desc: optional - for adding custom text to signed Eth 2.0 blocks - 16 chars max
          env: CUSTOM_GRAFFITI
          regex: ^.{0,16}$
        - name: Checkpoint Sync Provider
          desc: "If you would like to instantly sync using an existing Beacon node, enter its URL.\n
                 Example: https://<project ID>:<secret>@eth2-beacon-prater.infura.io\n
                 Leave this blank if you want to sync normally from the start of the chain."
          env: ETH2_CHECKPOINT_SYNC_URL
        - name: Max Peers
          desc: "The maximum number of peers to try to connect to - you\n
            can try lowering this if you have a low-resource system or\n
            a constrained network"
          env: ETH2_MAX_PEERS
          type: uint
          blankText: the default of 74
          default: 74
          advanced: true
        - name: P2P Port
          desc: The port to use for P2P (blockchain) traffic
          env: ETH2_P2P_PORT
          type: uint16
          default: 9001
          blankText: the default of 9001
          advanced: true
metrics:
  params:
  - name: ETH2 Metrics Port
    desc: The port for the Beacon Chain client to make its metrics available on
    env: ETH2_METRICS_PORT
    blankText: the default of 9100
    default: 9100
    advanced: true
  - name: Validator Metrics Port
    desc: The port for the Validator client to make its metrics available on
    env: VALIDATOR_METRICS_PORT
    blankText: the default of 9101
    default: 9101
    type: uint16
    advanced: true
  - name: Rocket Pool Node Metrics Port
    desc: The port for the Rocket Pool Node to make its metrics available on
    env: NODE_METRICS_PORT
    blankText: the default of 9102
    default: 9102
    type: uint16
    advanced: true
  - name: Node Exporter Metrics Port
    desc: The port for Prometheus's Node Exporter to make its metrics available on
    env: EXPORTER_METRICS_PORT
    blankText: the default of 9103
    default: 9103
    type: uint16
    advanced: true
  - name: Rocket Pool Watchtower Metrics Port
    desc: The port for the Rocket Pool Watchtower to make its metrics available on
    env: WATCHTOWER_METRICS_PORT
    blankText: the default of 9104
    default: 9104
    type: uint16
    advanced: true
  - name: Prometheus Port
    desc: The port for Prometheus to make its metrics available on
    env: PROMETHEUS_PORT
    blankText: the default of 9091
    default: 9091
    type: uint16
    advanced: true
  - name: Grafana Port
    desc: The port for Grafana to listen on for HTTP requests
    env: GRAFANA_PORT
    blankText: the default of 3100
    default: 3100
    type: uint16
    advanced: true
